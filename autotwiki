#!/usr/bin/python

import os
import re
import sys
import json
import mechanize
from datetime import (datetime, timedelta)

def week_description(d):
    """Return a description of the calendar week (Sunday to Saturday)
    containing the date d, avoiding repetition.

    >>> from datetime import date
    >>> week_description(date(2013, 12, 30))
    'Dec 29, 2013 - Jan 4, 2014'
    >>> week_description(date(2014, 1, 25))
    'Jan 19 - 25, 2014'
    >>> week_description(date(2014, 1, 26))
    'Jan 26 - Feb 1, 2014'

    """
    begin = d - timedelta(days=d.isoweekday() % 7)
    end = begin + timedelta(days=6)

    assert begin.isoweekday() == 7 # Sunday
    assert end.isoweekday() == 6   # Saturday
    assert begin <= d <= end

    if begin.year != end.year:
        fmt = '{0:%b} {0.day}, {0.year} - {1:%b} {1.day}, {1.year}'
    elif begin.month != end.month:
        fmt = "{0:%b} {0.day} - {1:%b} {1.day}, {1.year}"
    else:
        fmt = "{0:%b} {0.day} - {1.day}, {1.year}"

    return fmt.format(begin, end)

# Configuration
config_filename = os.path.expanduser('~/.config/autotwiki/config.json')
with open(config_filename, 'r') as f:
    config = json.load(f)

domain = config['domain']
username = config['username']
password = config['password']
team = config['team']
dryrun = config.get('dryrun', False)

# Calculate the current week
today = datetime.date(datetime.now())
(year, week, weekday) = today.isocalendar()

# Browser
br = mechanize.Browser()

# Debugging
# br.set_debug_http(True)
# br.set_debug_redirects(True)
# br.set_debug_responses(True)

# Credentials
br.add_password(domain, username, password)

url = "%s/bin/edit/%s/%sWeek%02dStatus%d" %(
    domain, team, username, week, year)
r = br.open(url)

# Select the first (index zero) form
br.select_form(nr=0)

text = br.form['text']
if len(text) < 100:
    # Topic looks like it hasn't been created yet
    config_filename = os.path.expanduser(config['status-template'])
    with open(config_filename, 'r') as f:
        text = f.read()

text = re.sub('\[\[full-name\]\]', username, text)
text = re.sub('\[\[week-number\]\]', str(week), text)
text = re.sub('\[\[week-string\]\]', week_description(today), text)

text = re.sub(r'<li> Patches submitted: \d+ \(\d+ this year\)<\/li>',
              "<li> Patches submitted: %d (%d this year)</li>" %(
              1, 2), text)

text = re.sub(r'<li> Patches landed: \d+ \(\d+ this year\)<\/li>',
              "<li> Patches landed: %d (%d this year)</li>" %(
              3, 4), text)

text = re.sub(r'<li> Patches reviewed: \d+ \(\d+ this year\)<\/li>',
              "<li> Patches reviewed: %d (%d this year)</li>" %(
              5, 6), text)

text = re.sub(r'<li> Bugs reported: \d+ \(\d+ this year\)<\/li>',
              "<li> Bugs reported: %d (%d this year)</li>" %(
              7, 8), text)

text = re.sub(r'<li> Bugs fixed: \d+ \(\d+ this year\)<\/li>',
              "<li> Bugs fixed: %d (%d this year)</li>" %(
              9, 10), text)

if dryrun:
    print text
    sys.exit(0)

br.form['text'] = text
br.submit()
print br.response().read()

#orig_html = r.read()
#new_html = orig_html.replace("> Development <", "> Development - 42 Patches <")
