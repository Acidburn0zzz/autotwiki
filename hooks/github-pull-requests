#!/usr/bin/env python
# -*- coding: utf-8 -*-

from datetime import datetime, date
from time import mktime
import feedparser
import sys

def error(message):
    sys.stderr.write("Error: %s\n" % message)
    sys.exit(2)

def parse_url(url):
    result = feedparser.parse(url)
    if not result:
        error("unable to connect to feed: %s" % url)
    if result.status != 200:
        error("invalid status: %d" % result.status)
    if result.version != "atom10":
        error("invalid RSS feed type: %s" % result.version)
    if result.encoding != "utf-8":
        error("invalid encoding type: %s" % result.encoding)
    if result.bozo != 0:
        error("malformed feed url" % result.bozo)
    if url != result.href:
        error("feed URL and reference does not match")
    return result.entries

def parse_public_activity(username, start, end):
    def is_pull_request(id):
        tag, event = id.split(",")
        return "PullRequestEvent" in event

    pull_request_count = 0
    PUB_ACTIVITY_FEED_URL = "https://github.com/{0}.atom"
    for entry in parse_url(PUB_ACTIVITY_FEED_URL.format(username)):
        if not is_pull_request(entry.id):
            continue
        as_datetime = datetime.fromtimestamp(mktime(entry.updated_parsed))
        if start is not None and start > as_datetime:
            continue
        if end is not None and end < as_datetime:
            continue
        pull_request_count += 1
    return pull_request_count

def main(username, start, end):
    if start == 'Beginning':
        start_date = None
    else:
        start_date = datetime.strptime(start, "%m-%d-%Y")
    if end == 'End':
        end_date = None
    else:
        end_date = datetime.strptime(end, "%m-%d-%Y")
    submitted = parse_public_activity(username, start_date, end_date)
    print "{0} pull-requests".format(submitted)
    sys.exit()

if __name__ == "__main__":
    if len(sys.argv) < 4:
        print "usage: %s <github-username> <begin-date> <end-date>"
        sys.exit(1)
    main(*sys.argv[1:])
